<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project>
	<package>
		<name>org.mql.java.animation</name>
		<class>
			<name>Examples</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>JPanel</fieldtype>
					<fieldName>screen</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>main</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>exp01</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>userInterface</methodName>
				</method>
			</methods>
		</class>
		<class>
			<name>Task</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Thread</fieldtype>
					<fieldName>runner</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>start</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Thread" depart="Task">Thread</composition>
				<implements arrive="Runnable" depart="Task">Runnable
				</implements>
			</relations>
		</class>
		<class>
			<name>ScreenLinstner</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>counter</fieldName>
				</field>
				<field>
					<fieldModifier>final</fieldModifier>
					<fieldtype>Examples</fieldtype>
					<fieldName>this$0</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>mousePressed</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>mouseReleased</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>mouseClicked</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>mouseExited</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>mouseEntered</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Examples" depart="ScreenLinstner">Examples
				</composition>
				<implements arrive="MouseListener"
					depart="ScreenLinstner">MouseListener</implements>
			</relations>
		</class>
		<class>
			<name>Pingouin</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Thread</fieldtype>
					<fieldName>runner</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>x</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>y</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>width</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>hight</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>String[]</fieldtype>
					<fieldName>src</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>String</fieldtype>
					<fieldName>path</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>String</fieldtype>
					<fieldName>type</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Image[]</fieldtype>
					<fieldName>images</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>current</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>step</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>start</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>stop</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>paintComponent</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>loadImages</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>goRight</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>goLeft</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>pause</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Thread" depart="Pingouin">Thread</composition>
				<aggregation arrive="String[]" depart="Pingouin">String[]
				</aggregation>
				<aggregation arrive="Image[]" depart="Pingouin">Image[]
				</aggregation>
				<extends arrive="JPanel" depart="Pingouin">JPanel</extends>
				<implements arrive="Runnable" depart="Pingouin">Runnable
				</implements>
			</relations>
		</class>
	</package>
	<package>
		<name>org.mql.java</name>
		<class>
			<name>Buffer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Object[]</fieldtype>
					<fieldName>data</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>readHead</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>writeHead</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>write</methodName>
				</method>
				<method>
					<methodtype>Object</methodtype>
					<methodName>read</methodName>
				</method>
				<method>
					<methodtype>Object[]</methodtype>
					<methodName>getdata</methodName>
				</method>
			</methods>
			<relations>
				<aggregation arrive="Object[]" depart="Buffer">Object[]
				</aggregation>
				<composition arrive="Logger" depart="Buffer">Logger</composition>
				<aggregation arrive="List" depart="Buffer">List</aggregation>
				<composition arrive="Thread" depart="Buffer">Thread</composition>
				<composition arrive="Thread" depart="Buffer">Thread</composition>
			</relations>
		</class>
		<class>
			<name>Processus</name>
			<fields />
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
			</methods>
		</class>
		<class>
			<name>Consumer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="Consumer">Buffer</composition>
				<composition arrive="Semaphore" depart="Consumer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Consumer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Consumer">Semaphore
				</composition>
			</relations>
		</class>
		<class>
			<name>Context</name>
			<fields />
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>print</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>pause</methodName>
				</method>
			</methods>
		</class>
		<class>
			<name>Examples</name>
			<fields />
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>main</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>exp01</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>exp02</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>exp03</methodName>
				</method>
			</methods>
		</class>
		<class>
			<name>InitWriter</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>List</fieldtype>
					<fieldName>sharedResource</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
			</methods>
			<relations>
				<aggregation arrive="List" depart="InitWriter">List</aggregation>
			</relations>
		</class>
		<class>
			<name>Producer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="Producer">Buffer</composition>
				<composition arrive="Semaphore" depart="Producer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Producer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Producer">Semaphore
				</composition>
			</relations>
		</class>
	</package>
	<package>
		<name>org.mql.java.semaphores</name>
		<interface>
			<name>Logger</name>
			<methods>
				<methodtype>void</methodtype>
				<methodName>log</methodName>
			</methods>
		</interface>
		<class>
			<name>FileLogger</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>String</fieldtype>
					<fieldName>source</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>List</fieldtype>
					<fieldName>messages</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>log</methodName>
				</method>
			</methods>
			<relations>
				<aggregation arrive="List" depart="FileLogger">List</aggregation>
				<implements arrive="Logger" depart="FileLogger">Logger</implements>
			</relations>
		</class>
		<class>
			<name>Producer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>m</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>empty</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>full</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
				<method>
					<methodtype>String</methodtype>
					<methodName>toString</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="Producer">Buffer</composition>
				<composition arrive="Semaphore" depart="Producer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Producer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Producer">Semaphore
				</composition>
			</relations>
		</class>
		<class>
			<name>Consumer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>m</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>empty</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>full</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>run</methodName>
				</method>
				<method>
					<methodtype>String</methodtype>
					<methodName>toString</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="Consumer">Buffer</composition>
				<composition arrive="Semaphore" depart="Consumer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Consumer">Semaphore
				</composition>
				<composition arrive="Semaphore" depart="Consumer">Semaphore
				</composition>
			</relations>
		</class>
		<interface>
			<name>Observer</name>
			<methods>
				<methodtype>void</methodtype>
				<methodName>update</methodName>
			</methods>
		</interface>
		<class>
			<name>ProducerConsumer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Producer[]</fieldtype>
					<fieldName>producers</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Consumer[]</fieldtype>
					<fieldName>consumers</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>m</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>empty</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Semaphore</fieldtype>
					<fieldName>full</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>PanelObserver</fieldtype>
					<fieldName>obser</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>main</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>init</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>userInterface</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>creatProducer</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>creatConsumer</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="ProducerConsumer">Buffer</composition>
				<aggregation arrive="Producer[]"
					depart="ProducerConsumer">Producer[]</aggregation>
				<aggregation arrive="Consumer[]"
					depart="ProducerConsumer">Consumer[]</aggregation>
				<composition arrive="Semaphore"
					depart="ProducerConsumer">Semaphore</composition>
				<composition arrive="Semaphore"
					depart="ProducerConsumer">Semaphore</composition>
				<composition arrive="Semaphore"
					depart="ProducerConsumer">Semaphore</composition>
				<composition arrive="PanelObserver"
					depart="ProducerConsumer">PanelObserver</composition>
				<extends arrive="JFrame" depart="ProducerConsumer">JFrame</extends>
			</relations>
		</class>
		<class>
			<name>ThreadList</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>String</fieldtype>
					<fieldName>name</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>LinkedList</fieldtype>
					<fieldName>list</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>String</methodtype>
					<methodName>getName</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>add</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>remove</methodName>
				</method>
				<method>
					<methodtype>List</methodtype>
					<methodName>getList</methodName>
				</method>
			</methods>
			<relations>
				<aggregation arrive="LinkedList" depart="ThreadList">LinkedList
				</aggregation>
			</relations>
		</class>
		<class>
			<name>Buffer</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Object[]</fieldtype>
					<fieldName>data</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>readHead</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>writeHead</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Logger</fieldtype>
					<fieldName>logger</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>List</fieldtype>
					<fieldName>observers</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>curretwritePosition</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>currentreadPosition</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Thread</fieldtype>
					<fieldName>currentProducer</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Thread</fieldtype>
					<fieldName>currentConsumer</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Object</fieldtype>
					<fieldName>element</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>add</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>log</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>write</methodName>
				</method>
				<method>
					<methodtype>Object</methodtype>
					<methodName>read</methodName>
				</method>
				<method>
					<methodtype>Object[]</methodtype>
					<methodName>getData</methodName>
				</method>
				<method>
					<methodtype>int</methodtype>
					<methodName>getCurretwritePosition</methodName>
				</method>
				<method>
					<methodtype>int</methodtype>
					<methodName>getCurrentreadPosition</methodName>
				</method>
				<method>
					<methodtype>Object</methodtype>
					<methodName>getElement</methodName>
				</method>
				<method>
					<methodtype>int</methodtype>
					<methodName>getWriteHead</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>setLogger</methodName>
				</method>
				<method>
					<methodtype>Thread</methodtype>
					<methodName>getCurrentProducer</methodName>
				</method>
				<method>
					<methodtype>Thread</methodtype>
					<methodName>getCurrentConsumer</methodName>
				</method>
				<method>
					<methodtype>int</methodtype>
					<methodName>getReadHead</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>notifyObservers</methodName>
				</method>
			</methods>
			<relations>
				<aggregation arrive="Object[]" depart="Buffer">Object[]
				</aggregation>
				<composition arrive="Logger" depart="Buffer">Logger</composition>
				<aggregation arrive="List" depart="Buffer">List</aggregation>
				<composition arrive="Thread" depart="Buffer">Thread</composition>
				<composition arrive="Thread" depart="Buffer">Thread</composition>
			</relations>
		</class>
		<class>
			<name>ConsoleObserver</name>
			<fields>
				<field>
					<fieldModifier />
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>update</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="ConsoleObserver">Buffer</composition>
				<implements arrive="Observer" depart="ConsoleObserver">Observer
				</implements>
			</relations>
		</class>
		<class>
			<name>PanelObserver</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Buffer</fieldtype>
					<fieldName>buffer</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>margin</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>size</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>length</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>update</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>paintComponent</methodName>
				</method>
				<method>
					<methodtype>Dimension</methodtype>
					<methodName>getPreferredSize</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="Buffer" depart="PanelObserver">Buffer</composition>
				<extends arrive="JPanel" depart="PanelObserver">JPanel</extends>
				<implements arrive="Observer" depart="PanelObserver">Observer
				</implements>
			</relations>
		</class>
		<class>
			<name>CosoleLogger</name>
			<fields />
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>log</methodName>
				</method>
			</methods>
			<relations>
				<implements arrive="Logger" depart="CosoleLogger">Logger</implements>
			</relations>
		</class>
		<class>
			<name>Semaphore</name>
			<fields>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>int</fieldtype>
					<fieldName>value</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>ThreadList</fieldtype>
					<fieldName>waitingThreadList</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>String</fieldtype>
					<fieldName>name</fieldName>
				</field>
				<field>
					<fieldModifier>private</fieldModifier>
					<fieldtype>Logger</fieldtype>
					<fieldName>logger</fieldName>
				</field>
			</fields>
			<methods>
				<method>
					<methodtype>void</methodtype>
					<methodName>log</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>init</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>resume</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>suspend</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>setLogger</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>waitDijkstra</methodName>
				</method>
				<method>
					<methodtype>void</methodtype>
					<methodName>signalDijkstra</methodName>
				</method>
			</methods>
			<relations>
				<composition arrive="ThreadList" depart="Semaphore">ThreadList
				</composition>
				<composition arrive="Logger" depart="Semaphore">Logger</composition>
			</relations>
		</class>
	</package>
</project>